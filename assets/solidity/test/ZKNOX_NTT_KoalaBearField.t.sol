/************************************************************************************************************************************************************************/                                                                                                                                                                          
/*ZZZZZZZZZZZZZZZZZZZKKKKKKKKK    KKKKKKKNNNNNNNN        NNNNNNNN     OOOOOOOOO     XXXXXXX       XXXXXXX                         ..../&@&#.       .###%@@@#, ..                         
/*Z:::::::::::::::::ZK:::::::K    K:::::KN:::::::N       N::::::N   OO:::::::::OO   X:::::X       X:::::X                      ...(@@* .... .           &#//%@@&,.                       
/*Z:::::::::::::::::ZK:::::::K    K:::::KN::::::::N      N::::::N OO:::::::::::::OO X:::::X       X:::::X                    ..*@@.........              .@#%%(%&@&..                    
/*Z:::ZZZZZZZZ:::::Z K:::::::K   K::::::KN:::::::::N     N::::::NO:::::::OOO:::::::OX::::::X     X::::::X                   .*@( ........ .  .&@@@@.      .@%%%%%#&@@.                  
/*ZZZZZ     Z:::::Z  KK::::::K  K:::::KKKN::::::::::N    N::::::NO::::::O   O::::::OXXX:::::X   X::::::XX                ...&@ ......... .  &.     .@      /@%%%%%%&@@#                  
/*        Z:::::Z      K:::::K K:::::K   N:::::::::::N   N::::::NO:::::O     O:::::O   X:::::X X:::::X                   ..@( .......... .  &.     ,&      /@%%%%&&&&@@@.              
/*       Z:::::Z       K::::::K:::::K    N:::::::N::::N  N::::::NO:::::O     O:::::O    X:::::X:::::X                   ..&% ...........     .@%(#@#      ,@%%%%&&&&&@@@%.               
/*      Z:::::Z        K:::::::::::K     N::::::N N::::N N::::::NO:::::O     O:::::O     X:::::::::X                   ..,@ ............                 *@%%%&%&&&&&&@@@.               
/*     Z:::::Z         K:::::::::::K     N::::::N  N::::N:::::::NO:::::O     O:::::O     X:::::::::X                  ..(@ .............             ,#@&&&&&&&&&&&&@@@@*               
/*    Z:::::Z          K::::::K:::::K    N::::::N   N:::::::::::NO:::::O     O:::::O    X:::::X:::::X                   .*@..............  . ..,(%&@@&&&&&&&&&&&&&&&&@@@@,               
/*   Z:::::Z           K:::::K K:::::K   N::::::N    N::::::::::NO:::::O     O:::::O   X:::::X X:::::X                 ...&#............. *@@&&&&&&&&&&&&&&&&&&&&@@&@@@@&                
/*ZZZ:::::Z     ZZZZZKK::::::K  K:::::KKKN::::::N     N:::::::::NO::::::O   O::::::OXXX:::::X   X::::::XX               ...@/.......... *@@@@. ,@@.  &@&&&&&&@@@@@@@@@@@.               
/*Z::::::ZZZZZZZZ:::ZK:::::::K   K::::::KN::::::N      N::::::::NO:::::::OOO:::::::OX::::::X     X::::::X               ....&#..........@@@, *@@&&&@% .@@@@@@@@@@@@@@@&                  
/*Z:::::::::::::::::ZK:::::::K    K:::::KN::::::N       N:::::::N OO:::::::::::::OO X:::::X       X:::::X                ....*@.,......,@@@...@@@@@@&..%@@@@@@@@@@@@@/                   
/*Z:::::::::::::::::ZK:::::::K    K:::::KN::::::N        N::::::N   OO:::::::::OO   X:::::X       X:::::X                   ...*@,,.....%@@@,.........%@@@@@@@@@@@@(                     
/*ZZZZZZZZZZZZZZZZZZZKKKKKKKKK    KKKKKKKNNNNNNNN         NNNNNNN     OOOOOOOOO     XXXXXXX       XXXXXXX                      ...&@,....*@@@@@ ..,@@@@@@@@@@@@@&.                     
/*                                                                                                                                   ....,(&@@&..,,,/@&#*. .                             
/*                                                                                                                                    ......(&.,.,,/&@,.                                
/*                                                                                                                                      .....,%*.,*@%                               
/*                                                                                                                                    .#@@@&(&@*,,*@@%,..                               
/*                                                                                                                                    .##,,,**$.,,*@@@@@%.                               
/*                                                                                                                                     *(%%&&@(,,**@@@@@&                              
/*                                                                                                                                      . .  .#@((@@(*,**                                
/*                                                                                                                                             . (*. .                                   
/*                                                                                                                                              .*/   
///* Copyright (C) 2025 - Renaud Dubois, Simon Masson - This file is part of ZKNOX project
///* License: This software is licensed under MIT License
///* This Code may be reused including this header, license and copyright notice.
///* See LICENSE file at the root folder of the project.
///* FILE: ZKNOX_NTT_BabyBearField.t.sol
///* Description: Test file for ZKNOX_NTT BabyBear field implementation
/************************************************************************************************************************************************************************/   
// SPDX-License-Identifier: MIT
pragma solidity ^0.8.25;

import {Test, console} from "forge-std/Test.sol";

import  "../src/ZKNOX_NTT.sol";


//only for bench
contract NTTTest is Test {
    // File generated using ../pythonref/scripts/generate_test_vectors_solidity.py

    //exemple of stateless initialisation, no external contract provided
    ZKNOX_NTT ntt=new ZKNOX_NTT(address(0),address(0), 2130706433, 2122383361);
    // forgefmt: disable-next-line
    uint256[256]  psi_rev = [1, 2113994754, 1748172362, 391001680, 1982081381, 1148608476, 1464983071, 1461727711, 1835947661, 1960251344, 1669732944, 1553854242, 1181515767, 1525737196, 1808419225, 1127987059, 980834263, 868399711, 526603688, 1548376985, 815510757, 467816010, 1666571406, 1034637443, 1790095244, 487910398, 1688264839, 653389087, 1678462179, 196554022, 365838228, 1301153800, 894808134, 1023854377, 244581583, 1468025404, 239367984, 613489889, 699882112, 948641100, 227065608, 2108419023, 159806306, 16487292, 1360303381, 936141231, 577887151, 694551765, 1620416215, 1127122101, 916875845, 1582900547, 646975411, 680557966, 1133146809, 1925910468, 1983461360, 18258094, 1391113611, 1864118810, 1968072601, 13824221, 1763103368, 980538370, 1485461217, 672996872, 1669162136, 1541220333, 1589971352, 907760307, 1969764913, 1636104015, 985971141, 1174387119, 896629002, 2011613111, 392596362, 1444906957, 1054357477, 1950050051, 78208559, 300005969, 197311848, 826432152, 321752915, 145166618, 2128193381, 1094539878, 1679450733, 1297113338, 426837301, 383326856, 660697546, 175801359, 1899353261, 1019618442, 907314666, 1131092985, 941747062, 822648947, 1948548860, 1560916503, 1098398637, 1621667869, 2117931792, 1699384237, 706630238, 332456937, 1794588692, 2044855858, 1009866389, 2067739288, 1823860387, 1110650258, 906946490, 490041985, 1870622993, 779112627, 1323081706, 1315239969, 1091098021, 791702120, 1952819675, 1344954319, 1835545499, 383705227, 1070918980, 1670977482, 1506173, 1486104995, 1837227247, 1699528038, 1238817850, 1554325194, 979111143, 599276196, 549893190, 357467072, 1913996917, 1097815800, 1134488091, 1883353150, 1510043942, 1440491894, 2086149279, 485541757, 786881774, 1496516915, 1292439286, 10075228, 88994165, 1825413130, 1465035878, 1080558020, 1899612452, 1229005042, 1062666529, 1878470353, 62862613, 735820557, 111545692, 906979038, 79997623, 109395369, 1281863034, 578492120, 2101027822, 2099549861, 398437354, 584669985, 691123093, 1461283334, 1140307474, 2056400512, 184589757, 47428902, 945289613, 525736723, 1012377328, 62967776, 1746350316, 2043949344, 99561060, 2086607032, 156449609, 950989964, 2021452957, 285989205, 1978424909, 405152957, 908926970, 1737746287, 503382293, 223494034, 853091632, 1584348666, 647794907, 1707415506, 437466584, 2082443476, 387332517, 787059874, 434584585, 505691832, 129643600, 1863956557, 1560506992, 2100180179, 1645492735, 1977100327, 1236882163, 1749047861, 1290003476, 1469204186, 1174261445, 491739000, 632213704, 398621279, 1288955715, 1169238511, 1803189571, 110447331, 2090334930, 191112685, 1667500008, 471046224, 1418101296, 1096825238, 1726353549, 1598139417, 2013915516, 477556550, 1590437530, 153386493, 345817777, 343352771, 120752741, 363199996, 1002338618, 460353178, 1910620773, 1026255736, 1114422140, 644750040, 1853338363, 357597453, 2006072795, 1499288413, 468407228, 1155490475, 1709873317, 962345798, 2075680569, 32098650, 1868953880, 1381868951];
    // forgefmt: disable-next-line
    uint256[256]  psi_inv_rev = [1, 16711679, 1739704753, 382534071, 668978722, 665723362, 982097957, 148625052, 1002719374, 322287208, 604969237, 949190666, 576852191, 460973489, 170455089, 294758772, 829552633, 1764868205, 1934152411, 452244254, 1477317346, 442441594, 1642796035, 340611189, 1096068990, 464135027, 1662890423, 1315195676, 582329448, 1604102745, 1262306722, 1149872170, 1150168063, 367603065, 2116882212, 162633832, 266587623, 739592822, 2112448339, 147245073, 204795965, 997559624, 1450148467, 1483731022, 547805886, 1213830588, 1003584332, 510290218, 1436154668, 1552819282, 1194565202, 770403052, 2114219141, 1970900127, 22287410, 1903640825, 1182065333, 1430824321, 1517216544, 1891338449, 662681029, 1886124850, 1106852056, 1235898299, 459728951, 1059787453, 1747001206, 295160934, 785752114, 177886758, 1339004313, 1039608412, 815466464, 807624727, 1351593806, 260083440, 1640664448, 1223759943, 1020056175, 306846046, 62967145, 1120840044, 85850575, 336117741, 1798249496, 1424076195, 431322196, 12774641, 509038564, 1032307796, 569789930, 182157573, 1308057486, 1188959371, 999613448, 1223391767, 1111087991, 231353172, 1954905074, 1470008887, 1747379577, 1703869132, 833593095, 451255700, 1036166555, 2513052, 1985539815, 1808953518, 1304274281, 1933394585, 1830700464, 2052497874, 180656382, 1076348956, 685799476, 1738110071, 119093322, 1234077431, 956319314, 1144735292, 494602418, 160941520, 1222946126, 540735081, 589486100, 461544297, 1457709561, 645245216, 748837482, 261752553, 2098607783, 55025864, 1168360635, 420833116, 975215958, 1662299205, 631418020, 124633638, 1773108980, 277368070, 1485956393, 1016284293, 1104450697, 220085660, 1670353255, 1128367815, 1767506437, 2009953692, 1787353662, 1784888656, 1977319940, 540268903, 1653149883, 116790917, 532567016, 404352884, 1033881195, 712605137, 1659660209, 463206425, 1939593748, 40371503, 2020259102, 327516862, 961467922, 841750718, 1732085154, 1498492729, 1638967433, 956444988, 661502247, 840702957, 381658572, 893824270, 153606106, 485213698, 30526254, 570199441, 266749876, 2001062833, 1625014601, 1696121848, 1343646559, 1743373916, 48262957, 1693239849, 423290927, 1482911526, 546357767, 1277614801, 1907212399, 1627324140, 392960146, 1221779463, 1725553476, 152281524, 1844717228, 109253476, 1179716469, 1974256824, 44099401, 2031145373, 86757089, 384356117, 2067738657, 1118329105, 1604969710, 1185416820, 2083277531, 1946116676, 74305921, 990398959, 669423099, 1439583340, 1546036448, 1732269079, 31156572, 29678611, 1552214313, 848843399, 2021311064, 2050708810, 1223727395, 2019160741, 1394885876, 2067843820, 252236080, 1068039904, 901701391, 231093981, 1050148413, 665670555, 305293303, 2041712268, 2120631205, 838267147, 634189518, 1343824659, 1645164676, 44557154, 690214539, 620662491, 247353283, 996218342, 1032890633, 216709516, 1773239361, 1580813243, 1531430237, 1151595290, 576381239, 891888583, 431178395, 293479186, 644601438, 2129200260];

    uint256 constant q = 2130706433;// koalabear field
    uint256 nm1modq=  2122383361;//256^-1 mod q



    //exemple of stateful initialisation, no external contract provided
    function setUp() public {
       
        console.log("q=%d, n=%d",q,psi_rev.length);

        bytes memory bytecode_psirev=abi.encodePacked(psi_rev);

        address a_psirev; //address of the precomputations bytecode contract
        a_psirev = address(uint160(0xcaca));//here it is etched, use create in the future
        vm.etch(a_psirev, bytecode_psirev); //pushing psirev bytecode into contract todo : replace with create
        
        bytes memory bytecode_psiInvrev=abi.encodePacked(psi_inv_rev);

        address a_psiInvrev; //address of the precomputations bytecode contract
        a_psiInvrev = address(uint160(0xa5a5));//here it is etched, use create in the future
        vm.etch(a_psiInvrev, bytecode_psiInvrev); //pushing psirev bytecode into contract todo : replace with create

        ntt.update(a_psirev, a_psiInvrev, q, nm1modq );//update ntt with outer contract

      

    } 

    // f and its ntt; using ../pythonref/scripts/generate_test_vectors_solidity.py
    uint256[] f = [uint256(1810216375), 411075249, 1715459080, 1372714790, 2054412206, 86672688, 1378505247, 546645931, 1443150864, 1111029332, 1621694943, 1313582733, 991818730, 504869152, 823662203, 1410125618, 41377544, 101176274, 1322791540, 463385223, 1890945845, 336478344, 780475452, 519622581, 1325961884, 1416309770, 134653230, 144942847, 2127653026, 1765820985, 1440523856, 1094217002, 1985792955, 1750186597, 1426712346, 1678255328, 601506141, 553022695, 619711036, 1135178875, 1328753599, 722525404, 445772243, 196764834, 461530342, 948805890, 475706287, 1238853892, 400126143, 1411136540, 1920474769, 2050684600, 1251222554, 2070634606, 2072249659, 1160276349, 1319810445, 624236834, 1611776610, 1977842815, 402236106, 807374892, 2030365476, 34049140, 1293074105, 139256917, 1080190269, 1152411740, 248258494, 1463522215, 2070383242, 742147025, 366299656, 1842197441, 1779424993, 1427129461, 190632824, 1633617690, 2123601243, 2050032037, 336395625, 1470591083, 260271133, 660218717, 2028981573, 46101793, 1357476700, 1841449444, 1470487887, 1415604390, 1350507646, 1924743806, 1404959431, 1323778589, 1490841180, 1866999318, 612168157, 539182255, 964875929, 1742100728, 1810338644, 2100144747, 840498885, 522314189, 1954564843, 1489119172, 1993177085, 884961561, 2032787206, 803729083, 212070001, 1740958030, 1249631958, 988598620, 164255484, 1738621654, 573639978, 1126350272, 718379174, 770344706, 1147200306, 13646563, 858200656, 2093278315, 1363836618, 704819400, 1686152718, 1156159300, 938908656, 1814897034, 1223791535, 1688429490, 1675957461, 1141711179, 1792598685, 860175933, 1195132455, 422482791, 1209247410, 709341352, 1884230428, 2094621187, 1396377924, 1833917158, 2095565889, 66383459, 1932648394, 1284241935, 1215039618, 1691545195, 1875598500, 1591753597, 592456041, 1410067108, 115076489, 1342916703, 1192513926, 768390041, 338934573, 1368315931, 1267954076, 1780013691, 1300156884, 625310544, 1823369972, 1068984342, 691473614, 1360101067, 1571087234, 1862922846, 1253536974, 1848007563, 1401415617, 1257800520, 2036955806, 750232578, 1863230200, 986985094, 1310375964, 4111340, 1989528946, 255802920, 1922834855, 1216442872, 2004158411, 1696385644, 1571804297, 1401737147, 1246207899, 38836431, 61933676, 1594532662, 467305122, 1710041353, 1917836589, 1876318871, 1164053077, 620970900, 564491257, 407049196, 1275422481, 2106009885, 2004752818, 1025376191, 406935325, 983211906, 409978973, 19762057, 593165764, 1041252479, 367363923, 1968549508, 834290015, 733437089, 286540911, 1413267991, 1198835625, 499520437, 250488560, 1341019302, 717547479, 1086812937, 1572296277, 1205637172, 14701041, 100788005, 106336435, 1102814583, 522679470, 918613481, 786672816, 132663755, 1534341275, 842824702, 363474787, 1708844944, 1872478423, 661931593, 1717889531, 17953823, 928315705, 327573597, 523119741, 1484282071, 1463459536, 1449022261, 479360522, 614297421, 287388043, 132298329, 1165969884, 1706855193, 1561236520, 320756557, 1814974409, 1398078503];
    uint256[] f_ntt = [uint256(430120763), 1382510, 1577144282, 1888508306, 1368256991, 320251806, 2052232866, 2037767569, 1712606217, 865111088, 1852068567, 834160647, 453853231, 357227191, 917944845, 8949254, 844299241, 1205184901, 824094990, 889939695, 651199259, 1240337169, 1769142397, 856379742, 684874978, 1951804258, 1229974251, 892678044, 206147383, 401823845, 1176129647, 1315729972, 615454082, 703770082, 454566482, 629706281, 1269942668, 1173502566, 1430276711, 1234397437, 1881412882, 1150695513, 208028124, 400995484, 790198256, 1477771465, 143432531, 57578461, 1438099599, 1447361248, 2090162526, 1534010176, 1296097496, 1417581032, 1148154083, 1682654194, 1003941343, 365249187, 232219966, 1321291719, 1075191841, 743105840, 1601333085, 1365094053, 27650958, 1658707442, 601691851, 1044472752, 1262230205, 1778381493, 1114488829, 1253289517, 608760475, 1952750208, 594365706, 1993300489, 1494639315, 702112170, 335253570, 1711231156, 413477150, 1249466043, 1244221521, 2119035676, 636621532, 528013936, 1745593431, 1433579255, 1523970627, 853268871, 865479405, 1983282789, 267936506, 497302884, 594504776, 398501038, 432606845, 236928265, 1382851439, 976365562, 1942726400, 1313839042, 1937684053, 2073657867, 1936511540, 1977501575, 1957682978, 93757091, 1108125253, 668278475, 244007403, 931895905, 1715241403, 233709572, 1984637667, 833187626, 710184646, 1182321530, 1433396994, 381430310, 425617191, 116504476, 2394977, 489422704, 11556034, 280257376, 1269785110, 751428144, 1812823737, 2116789160, 1366585229, 413069004, 817293074, 384379148, 1818464760, 845653549, 485871103, 279110854, 2049636223, 453886172, 1822574073, 1222176152, 1498700914, 1810637552, 1756560948, 155758816, 501343887, 264726765, 1762054541, 1416323799, 436972943, 1701309827, 2020680251, 2061901093, 1507848743, 2053027917, 2071756382, 935957763, 668955074, 654926290, 988427791, 2063843111, 2073063714, 837386352, 865482925, 1748504888, 436440234, 1472216449, 1703713074, 1738640759, 546740886, 1166083200, 1894974834, 1879230264, 299149837, 629767293, 959876847, 889556294, 248909907, 1772843552, 1109178174, 353175222, 1088482917, 1714511650, 515204384, 550274483, 323182088, 1784173731, 1649769873, 1012552211, 1114547236, 2085800430, 802932393, 128763547, 2007023897, 121334809, 1643040315, 1025867073, 39898315, 1666744459, 1073405369, 2030188044, 1049016638, 1472953534, 1855071176, 2038606813, 2058412853, 137074160, 1392136159, 586453907, 1178217522, 156469383, 1410119161, 1159198790, 239426464, 1628751627, 324043710, 901731882, 1823679123, 276551543, 1466228242, 2095782784, 1839408674, 819840197, 543604703, 944298370, 185208138, 941454329, 1444556901, 477651260, 1778770994, 1638242918, 1615897102, 1998764804, 1599828430, 197968644, 1913113980, 269548824, 900204779, 75262064, 843313808, 1777501144, 55693334, 633426061, 1419721414, 1112961505, 828661001, 583572018, 1112810660, 1101477019, 899802484, 1876737826, 325353481, 1689355328, 83028517, 189921793];

   
    function test_NTTFW() public view{
        uint256 n = 256;
         uint256[] memory fntt=ntt.ZKNOX_NTTFW(f, ntt.o_psirev());
         for(uint i=0;i<n;i++){
            assertEq(fntt[i], f_ntt[i]);
         }
    }

 function test_NTTINV() public view{
         uint256[] memory res=ntt.ZKNOX_NTTINV(f_ntt, ntt.o_psi_inv_rev());
         uint256 n = 256;
         for(uint i=0;i<n;i++){
            assertEq(res[i], f[i]);
         }
    }

}    
